# 3-1 깃 커밋과 로그

깃 3영역
- 작업 영역: 탐색기 상의 폴더 하부 -> working directory, working tree
- 스테이징 영역: 저장소의 .git 폴더의 파일 index -> staging area, index
- 깃 저장소: 저장소의 .git 폴더의 여러 정보

$git add: working tree-> staging area
$git commit: staging area -> git repository

깃 상태 보기
$git status: 깃 저장소의 현재 상태를 확인
- --long: 현재의 상태 표시, 기본 값
- --short|-s: 현재의 상태를 간단히 표시
- --global --edit: 도움말 보기

untracked file: 처음 만들어진 파일 -> 깃에 관리되지 않는 파일을 의미

커밋
$git commit: 커밋 메시지를 입력할 기본 편집기 실행
- -m 'message': 커밋 메시지를 직접 입력
- -a -m 'message': 추가와 커밋 함께 실행
- -am 'message': 추가와 커밋 함께 실행

버전 로그 이력 확인
$git log: 로그 이력 정보를 표시
- --oneline: 한 줄로 표시
- --patch|-p: 파일의 변화를 표시

커밋 정보
$git show: 마지막 커밋의 커밋 정보 표시
- --oneline: 커밋 로그 한 줄과 파일 차이 표시
- -s: 파일 차이는 표시되지 않음
- [HEAD]: 지정한 head의 커밋 정보 표시
- [commitID]: 지정한 commitid의 커밋 정보 표시

# 3-2 로그 이력과 과거 여행

명령 checkout
$git checkout HEAD~: head 이전 커밋으로 이동
$git checkout: 이전 checkout으로 이동
$git checkout main: 브랜치의 마지막 커밋으로 이동

detached HEAD: 명령 git status에서도 떨어진 head 상태를 확인
git checkout: 되돌아오기

